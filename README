PostgreSQL session save handler module README

*WARNING*
This session save handler is EXPERIMENTAL. Anything may be 
changed/deleted/added without notice.

mod_pgsql is a session save handler module. It provides session storage
with PostgreSQL database. This module is written by yohgaki@php.net. 
Please report problems to http://bugs.php.net/ or php-dev@lists.php.net.

Session Table Definition

CREATE TABLE php_session (
  ps_id            char(32),
  ps_name          char(32),
  ps_data          text,
  ps_created       integer,
  ps_modified      integer,
  ps_expire        integer,
  ps_addr_created  text,
  ps_addr_modified text,
  ps_access        integer,
  ps_error         integer,
  ps_warning       integer,
  ps_notice        integer,
  ps_err_message   text
);

CREATE INDEX php_session_idx ON php_session USING BTREE (ps_id);

Application Variable Table Definition

CREATE TABLE php_app_vars (
  app_modified       integer,
  app_name           text,
  app_vars           text
);
 

NOTE: If you use HASH for index, you'll have deadlock problem. DO
NOT USE HASH INDEX.

User may *append* additional fields.

How to use

To compile PHP with mod_pgsql, you need "--with-session-pgsql[=DIR]"
when you configure PHP. [=DIR] is installation path for
PostgreSQL. You don't have to compile PHP with PostgreSQL module, but
your system must have libpq and headers installed.

Following php.ini directives has special meanings for mod_pgsql

session.save_handler       : "pgsql" for mod_pgsql session.
session.pgsql_db           : Valid PostgreSQL database connection string. 
                            For example, "host=pgsql dbname=session user=php"
session.pgsql_use_app_var  : Use application level variable or not.
                            Use different session name to change application.
                            (i.e. use session_name('AppName')) Default is 1.
session.pgsql_create_table : Automatically create session and application 
                             variable table. Default is 1.
session.pgsql_gc_interval  : How often perform GC in seconds. Default
                            is 3600 seconds. session.gc_probability is ignored.
session.pgsql_serializable : Use serializable transaction isolation level for
                             session handling. Default is 0.


How it works

It uses libpq which is written in C. It also uses aync query for
garbage collection. Therefore, user will not experience delay even if
garbage collection is performed. This module is much more efficient
than user handlers written in PHP.

How fast pgsql session save handler is

Here is summary of simple benchmark tests. This module is as fast as
files session save handler on my test system. I also compared with
equivalent user save handler with PostgreSQL database. This module is
2 times faster than PHP script version.  msession handler is about 30%
faster than pgsql save handler. mm handler does not work for me :(

How to customize

Since mod_pgsql uses PostgreSQL database. User can append more fields
to session database and create session access functions as user
want. User fields should be defined after session_pgsql fields.

Known Problem
 - None. Please report problems.

History
 Version 0.1 is released 2002/1/12
  - Initial release with plain a normal session save handler 
    feature. 

 Version 0.2 is released 2002/2/20
  - Added application variable ($_APP) support.

 Version 0.3 is released 2002/X/XX
  - Added module functions. session_pgsql_info(), session_pgsql_add_errer() and
    session_pgsql_get_error().

Road Map
 Version 0.4 
  - Improve application variable ($_APP). Use cached value and prevent
    storing the same value.

 Version 0.5
  - Add semi-constant applcation verialbe ($_CONST).

 Version 0.6
  - Add failover feature

 Version 0.9
  - Add load balance feature.

 Version 1.0
  - Stable version 
