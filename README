PostgreSQL session save handler module README

*WARNING*
This session save handler is EXPERIMENTAL. Anything may be 
changed/deleted/added without notice.

mod_pgsql is a session save handler module. It provides session storage
with PostgreSQL database. This module is written by yohgaki@php.net. 
Please report problems to http://bugs.php.net/ or php-dev@lists.php.net.

Session Table Definition

CREATE TABLE php_session (
  ps_id            char(32),
  ps_name          char(32),
  ps_data          text,
  ps_created       integer,
  ps_modified      integer,
  ps_expire        integer,
  ps_addr_created  cidr,
  ps_addr_modified cidr,
  ps_error         integer,
  ps_warning       integer,
  ps_notice        integer,
  ps_err_message   text,
  ps_counter       integer,
  ps_reserved      integer
);

CREATE INDEX php_session_idx ON php_session USING BTREE (ps_id);

Application Variable Table Definition

CREATE TABLE php_app_vars (
  app_modified       integer,
  app_name           text,
  app_vars           text
);
 

NOTE: If you use HASH for index, you'll have deadlock problem. DO
NOT USE HASH INDEX.

User may *append* additional fields, ps_reserved fields are place
holder for additional feature. Since mod_pgsql accesses field using
field index, user must use this field order.

How to use

To compile PHP with mod_pgsql, you need "--with-session-pgsql[=DIR]"
when you configure PHP. [=DIR] is installation path for
PostgreSQL. You don't have to compile PHP with PostgreSQL module, but
your system must have libpq and headers installed.

Following php.ini directives has special meanings for mod_pgsql

session.save_handler      : "pgsql" for mod_pgsql session.
session.pgsql_db          : Valid PostgreSQL database connection string. 
                            For example, "host=pgsql dbname=session user=php"
session.pgsql_use_app_var : Use application level variable or not.
                            Use different session name to change application.
                            (i.e. use session_name('AppName'))
session.pgsql_create_table : Automatically create session and application 
                             variable table.
session.pgsql_gc_interval : How often perform GC in seconds. Default
                            is 3600 seconds.


How it works

It uses libpq which is written in C. It also uses aync query for
garbage collection. Therefore, user will not experience delay even if
garbage collection is performed. This module is much more efficient
than user handlers written in PHP.

How fast pgsql session save handler is

Here is summary of simple benchmark tests. This module is as fast as
files session save handler on my test system. I also compared with
equivalent user save handler with PostgreSQL database. This module is
2 times faster than PHP script version.  msession handler is about 30%
faster than pgsql save handler. mm handler does not work for me :(

How to customize

Since mod_pgsql uses PostgreSQL database. User can add more fields to
session database and create session access functions as user
want. Keep in mind that user is not supposed to order of standard
fields. User fields are must be defined after mod_pgsql fields.

Known Problem
 - Many.

ToDo
 - More efficient application variable handling
 - Simple fail over
 - Load balancing

History
 0.1 is released 2002/1/12
  - Initial release with plain a normal session save handler 
    feature. 
 0.2 is released 2002/2/20
  - Added application variable support.
 0.3 is released 2002/X/XX
  - Added module functions. session_pgsql_info(), session_pgsql_add_errer() and
    session_pgsql_get_error().

  
